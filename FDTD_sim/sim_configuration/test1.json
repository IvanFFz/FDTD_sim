{
  "precission": [ "float64", "complex128" ],

  "times": {
    "thermalization": 1.0, //Seconds thermalizing the system
    "simulation": 1.0, //Seconds of simulation after thermalizing
    "record_times": [ 0.5, 0.6 ] //Initial and final time of record after thermalizing
  },

  "grid": {

    "sim_parameters": {
      "dt": 1e-6, //s
      "ds": 1e-3, //m
      "nPoints": 4096,
      "airAbsorptivity": 0.0,
      "density": 1.2, //kg/m3
      "c": 343
    },

    "boundary": {
      "layer_thickness": 6,
      "max_object_distance": 6,
      "grid_limits_min": -2.048 //"En m "
    }

  },

  "transducers": [
    {
      "model": "path",
      "zone_emission": "path",
      "file_extension": ".stl",
      "amplitude": 1.5e-3, //m ; seen in datasheet for muRata MA40S4S
      "frequency": 40000, //En Hz
      "initial_phase":  0.0, //Creo que en rad

      "units": [
        {
          "normal": [ 0, 0, 1 ], //"normal of the object in the original 3D mesh"
          "location": [ -2, 0, 0 ], //"position"
          "orientation": [ 0, 0, 0 ], //"where the normal should point"
          "scale": 1.0, //"scale of the object in terms of the scale of the 3D mesh"
          "triangle_multiplier":  1.0 //"number of points for each triangle in the 3D mesh"
        }
      ]


    }
  ],

  "objects": [
    {
      "model": "path",
      "file_extension": ".stl",

      "units": [
        {
          "normal": [ 0, 0, 1 ], //"normal of the object"
          "location": [ 0, 0, 0 ], //"position"
          "orientation": [ 0, 0, 0 ], //"where the normal should point"
          "scale": 1.0, //"scale of the object in terms of the scale of the 3D mesh"
          "triangle_multiplier": 1.0 //"number of points for each triangle in the 3D mesh"
        }
      ]


    }
  ],

  "plot": {

    "mode": "plane", // We can choose between "plane" to plot a simple plane of the grid, or "manual" to select the points manually (Work in progress, not available yet)
    "region": { // If we select "plane" mode, it is a dictionary with axis and location in m (it must be a value between the limits of the grid).
      // If we select "manual" mode, it must be the path to a txt file with the points. We can implement a simple code to generate this points in terms of the grid for simple geometries (spheres...).
      "axis": "X",
      "value": 2.0

    },

    "initial_ready_to_plot": "False",
    "value_to_plot": "amplitude", //We can select to plot amplitude or phase.

    "save_video": {

      "activated": "True",
      "video_name": "test.avi",
      "path_to_save": "path",
      "fps": 24,
      "video_quality": [ 1024, 1080 ]

    },

    "ratio_sim_plot_times": 1e-4 //Ratio "time in simulation" to "time between frames in plot".


  }
}